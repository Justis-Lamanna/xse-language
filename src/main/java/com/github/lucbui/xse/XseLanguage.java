package com.github.lucbui.xse;

import com.github.lucbui.xse.language.Language;
import com.github.lucbui.xse.language.Parameter;
import com.github.lucbui.xse.language.builder.LanguageBuilder;
import com.github.lucbui.xse.language.builder.BasicCommandBuilder;
import com.github.lucbui.xse.language.builder.VariantBuilder;
import com.github.lucbui.xse.language.builder.VariantCommandBuilder;

public class XseLanguage {
    private static final String UNKNOWN_COMMAND = "This command is currently under investigation. No detailed information is available at this time";
	private static final String UNKNOWN_PARAMETER = "???";

	/**
	 * Version 1 of the XSE language, exactly as it works in the original XSE.
	 */
    public static final Language V1  = new LanguageBuilder()
				.withCommand(new BasicCommandBuilder("nop").withDescription("Does absolutely nothing"))
				.withCommand(new BasicCommandBuilder("nop1").withDescription("Does absolutely nothing"))
				.withCommand(new BasicCommandBuilder("end").withDescription("Ends the execution of the script"))
				.withCommand(new BasicCommandBuilder("return").withDescription("Pops back to the last calling command used"))
				.withCommand(new BasicCommandBuilder("call").withDescription("Continues script execution from another point. Can be returned to.").withParam(Parameter.POINTER, "Pointer to continue from"))
				.withCommand(new BasicCommandBuilder("goto").withDescription("Continues script execution from another point").withParam(Parameter.POINTER, "Pointer to continue from"))
				.withCommand(new BasicCommandBuilder("if1").withDescription("If the last comparison returned a certain value, jumps to another script").withParam(Parameter.BYTE, "Condition").withParam(Parameter.POINTER, "Pointer to go to"))
				.withCommand(new BasicCommandBuilder("if2").withDescription("Calling version of the if command").withParam(Parameter.BYTE, "Condition").withParam(Parameter.POINTER, "Pointer to call"))
				.withCommand(new BasicCommandBuilder("gotostd").withDescription("Jumps to a built-in function").withParam(Parameter.BYTE, "Function # to jump to"))
				.withCommand(new BasicCommandBuilder("callstd").withDescription("Calls a built-in function").withParam(Parameter.BYTE, "Function # to jump to"))
				.withCommand(new BasicCommandBuilder("gotostdif").withDescription("Jumps to a built-in function, conditional version").withParam(Parameter.BYTE, "Condition").withParam(Parameter.BYTE, "Function # to jump to"))
				.withCommand(new BasicCommandBuilder("callstdif").withDescription("Jumps to a built-in function, conditional version").withParam(Parameter.BYTE, "Condition").withParam(Parameter.BYTE, "Function # to call"))
				.withCommand(new BasicCommandBuilder("jumpram").withDescription("Jumps to a default RAM location, executing the script stored there."))
				.withCommand(new BasicCommandBuilder("killscript").withDescription("Kills the script and resets the script RAM"))
				.withCommand(new BasicCommandBuilder("setbyte").withDescription("Sets a predefined address to the specified byte value").withParam(Parameter.BYTE, "Byte value to use"))
				.withCommand(new BasicCommandBuilder("loadpointer").withDescription("Loads a pointer into the script RAM so other commands can use it").withParam(Parameter.BYTE, "Memory bank to use").withParam(Parameter.POINTER, "Pointer to load into memory"))
				.withCommand(new BasicCommandBuilder("setbyte2").withDescription("Sets a memory bank to the specified byte value").withParam(Parameter.BYTE, "Memory bank to use").withParam(Parameter.BYTE, "Byte value to use"))
				.withCommand(new BasicCommandBuilder("writebytetooffset").withDescription("Sets the byte at the specified offset to a certain value").withParam(Parameter.BYTE, "Byte value to write").withParam(Parameter.POINTER, "Location to write it to"))
				.withCommand(new BasicCommandBuilder("loadbytefrompointer").withDescription("Loads the byte found at a pointer into the script RAM so other commands can use it").withParam(Parameter.BYTE, "Memory bank to use").withParam(Parameter.POINTER, "Pointer to byte to load into memory"))
				.withCommand(new BasicCommandBuilder("setfarbyte").withDescription("Set the byte into a specified pointer").withParam(Parameter.BYTE, "Memory bank to use").withParam(Parameter.POINTER, "Pointer to write byte to"))
				.withCommand(new BasicCommandBuilder("copyscriptbanks").withDescription("Copies one script bank to another").withParam(Parameter.BYTE, "Bank #1 - Destination").withParam(Parameter.BYTE, "Bank #2 - Source"))
				.withCommand(new BasicCommandBuilder("copybyte").withDescription("Copies a byte value from one place to another").withParam(Parameter.POINTER, "Destination byte location").withParam(Parameter.POINTER, "Source byte location"))
				.withCommand(new BasicCommandBuilder("setvar").withDescription("Sets variable A to any value").withParam(Parameter.VARIABLE, "Variable A").withParam(Parameter.WORD, "Value to set A to"))
				.withCommand(new BasicCommandBuilder("addvar").withDescription("Adds any value to variable A").withParam(Parameter.VARIABLE, "Variable A").withParam(Parameter.WORD, "Value to add to A"))
				.withCommand(new BasicCommandBuilder("subvar").withDescription("Subtracts any value from variable A").withParam(Parameter.VARIABLE, "Variable A").withParam(Parameter.WORD, "Value to subtract from A"))
				.withCommand(new BasicCommandBuilder("copyvar").withDescription("Copies variable B to A").withParam(Parameter.VARIABLE, "Variable A - Destination").withParam(Parameter.VARIABLE, "Variable B - Source"))
				.withCommand(new BasicCommandBuilder("copyvarifnotzero").withDescription("Sets variable B to A, but only if B is higher than 0").withParam(Parameter.VARIABLE, "Variable A - Destination").withParam(Parameter.VARIABLE, "Variable B - Source"))
				.withCommand(new BasicCommandBuilder("comparebanks").withDescription("Compare two banks").withParam(Parameter.WORD, "Bank #1").withParam(Parameter.WORD, "Bank #2"))
				.withCommand(new BasicCommandBuilder("comparebanktobyte").withDescription("Compares a variable stored in a buffer to a byte value").withParam(Parameter.BYTE, "Bank #").withParam(Parameter.BYTE, "Byte value to compare variable to"))
				.withCommand(new BasicCommandBuilder("comparebanktofarbyte").withDescription("Compares a bank with a byte at some location").withParam(Parameter.BYTE, "Bank #").withParam(Parameter.POINTER, "Pointer to a byte value to compare variable to"))
				.withCommand(new BasicCommandBuilder("comparefarbytetobank").withDescription("Compares a byte at some location to a buffered variable. The reverse of comparevartofarbyte").withParam(Parameter.POINTER, "Pointer to a byte value to compare B to").withParam(Parameter.BYTE, "Bank #"))
				.withCommand(new BasicCommandBuilder("comparefarbytetobyte").withDescription("Compares a byte at some location to a byte value").withParam(Parameter.POINTER, "Pointer to a byte value to compare with").withParam(Parameter.BYTE, "Byte value to compare with"))
				.withCommand(new BasicCommandBuilder("comparefarbytes").withDescription("Compares a byte at some location to a byte at another location").withParam(Parameter.POINTER, "Pointer to a byte value to compare with").withParam(Parameter.POINTER, "Pointer to a byte value to compare with"))
				.withCommand(new BasicCommandBuilder("compare").withDescription("Compares variable A to a value").withParam(Parameter.VARIABLE, "Variable A").withParam(Parameter.WORD, "Value to compare A to"))
				.withCommand(new BasicCommandBuilder("comparevars").withDescription("Compares two variables").withParam(Parameter.VARIABLE, "Variable A").withParam(Parameter.VARIABLE, "Variable B"))
				.withCommand(new BasicCommandBuilder("callasm").withDescription("Calls a custom ASM routine").withParam(Parameter.POINTER, "Address of custom ASM routine"))
				.withCommand(new BasicCommandBuilder("cmd24").withDescription(UNKNOWN_COMMAND).withParam(Parameter.POINTER, UNKNOWN_PARAMETER))
				.withCommand(new BasicCommandBuilder("special").withDescription("Calls a special event").withParam(Parameter.WORD, "Event # to call"))
				.withCommand(new BasicCommandBuilder("special2").withDescription("Like special, but can store a returned value").withParam(Parameter.VARIABLE, "Variable to store returned value in").withParam(Parameter.WORD, "Special event to call"))
				.withCommand(new BasicCommandBuilder("waitstate").withDescription("Sets the script to a wait state, useful for some specials and commands"))
				.withCommand(new BasicCommandBuilder("pause").withDescription("Pauses script execution for a short amount of time").withParam(Parameter.WORD, "Delay"))
				.withCommand(new BasicCommandBuilder("setflag").withDescription("Sets a flag for later use").withParam(Parameter.FLAG, "Flag #"))
				.withCommand(new BasicCommandBuilder("clearflag").withDescription("Clears the value of a flag").withParam(Parameter.FLAG, "Flag #"))
				.withCommand(new BasicCommandBuilder("checkflag").withDescription("Checks the value of a flag").withParam(Parameter.FLAG, "Flag #"))
				.withCommand(new BasicCommandBuilder("cmd2c").withDescription(UNKNOWN_COMMAND).withParam(Parameter.WORD, UNKNOWN_PARAMETER).withParam(Parameter.WORD, UNKNOWN_PARAMETER))
				.withCommand(new BasicCommandBuilder("checkdailyflags").withDescription("Checks the daily flags to see if any of them have been set already, but only if they were set previously. Then it clears those flags. R/S/E only"))
				.withCommand(new BasicCommandBuilder("resetvars").withDescription("Resets the value of variables 0x8000, 0x8001, and 0x8002"))
				.withCommand(new BasicCommandBuilder("sound").withDescription("Plays a sound").withParam(Parameter.SOUND_ID, "Sound #"))
				.withCommand(new BasicCommandBuilder("checksound").withDescription("Checks if a sound, fanfare, or song is currently being played"))
				.withCommand(new BasicCommandBuilder("fanfare").withDescription("Plays a song as a fanfare").withParam(Parameter.SOUND_ID, "Song # to play"))
				.withCommand(new BasicCommandBuilder("waitfanfare").withDescription("Waits for a fanfare to finish"))
				.withCommand(new BasicCommandBuilder("playsong").withDescription("Switches to another song").withParam(Parameter.SOUND_ID, "Song # to play").withParam(Parameter.BYTE, UNKNOWN_PARAMETER))
				.withCommand(new BasicCommandBuilder("playsong2").withDescription("Switches to another song").withParam(Parameter.SOUND_ID, "Song # to play"))
				.withCommand(new BasicCommandBuilder("fadedefault").withDescription("Gently fades the current music back to the map's default song"))
				.withCommand(new BasicCommandBuilder("fadesong").withDescription("Gently fades into another song").withParam(Parameter.SOUND_ID, "Song # to fade to"))
				.withCommand(new BasicCommandBuilder("fadeout").withDescription("Fades out the currently playing song").withParam(Parameter.BYTE, "Fading speed"))
				.withCommand(new BasicCommandBuilder("fadein").withDescription("Fades the currently playing song back in").withParam(Parameter.BYTE, "Fading speed"))
				.withCommand(new BasicCommandBuilder("warp").withDescription("Warps the player to another map").withParam(Parameter.BYTE, "Bank # to warp to").withParam(Parameter.BYTE, "Map # to warp to").withParam(Parameter.BYTE, "Exit # to warp to").withParam(Parameter.VARIABLE_OR_WORD, "X coordinate").withParam(Parameter.VARIABLE_OR_WORD, "Y coordinate"))
				.withCommand(new BasicCommandBuilder("warpmuted").withDescription("Warps the player to another map. No sound effect.").withParam(Parameter.BYTE, "Bank # to warp to").withParam(Parameter.BYTE, "Map # to warp to").withParam(Parameter.BYTE, "Exit # to warp to").withParam(Parameter.VARIABLE_OR_WORD, "X coordinate").withParam(Parameter.VARIABLE_OR_WORD, "Y coordinate"))
				.withCommand(new BasicCommandBuilder("warpwalk").withDescription("Warps the player to another map. Walking effect.").withParam(Parameter.BYTE, "Bank # to warp to").withParam(Parameter.BYTE, "Map # to warp to").withParam(Parameter.BYTE, "Exit # to warp to").withParam(Parameter.VARIABLE_OR_WORD, "X coordinate").withParam(Parameter.VARIABLE_OR_WORD, "Y coordinate"))
				.withCommand(new BasicCommandBuilder("warphole").withDescription("Warps the player to another map. Hole effect.").withParam(Parameter.BYTE, "Bank # to warp to").withParam(Parameter.BYTE, "Map # to warp to"))
				.withCommand(new BasicCommandBuilder("warpteleport").withDescription("Warps the player to another map. Teleport effect.").withParam(Parameter.BYTE, "Bank # to warp to").withParam(Parameter.BYTE, "Map # to warp to").withParam(Parameter.BYTE, "Exit # to warp to").withParam(Parameter.VARIABLE_OR_WORD, "X coordinate").withParam(Parameter.VARIABLE_OR_WORD, "Y coordinate"))
				.withCommand(new BasicCommandBuilder("warp3").withDescription("Warps the player to another map").withParam(Parameter.BYTE, "Bank # to warp to").withParam(Parameter.BYTE, "Map # to warp to").withParam(Parameter.BYTE, "Exit # to warp to").withParam(Parameter.VARIABLE_OR_WORD, "X coordinate").withParam(Parameter.VARIABLE_OR_WORD, "Y coordinate"))
				.withCommand(new BasicCommandBuilder("setwarpplace").withDescription("Sets the place where a warp pointing to warp 127 of map 127.127 warps the player").withParam(Parameter.BYTE, "Bank # to warp to").withParam(Parameter.BYTE, "Map # to warp to").withParam(Parameter.BYTE, "Exit # to warp to").withParam(Parameter.VARIABLE_OR_WORD, "X coordinate").withParam(Parameter.VARIABLE_OR_WORD, "Y coordinate"))
				.withCommand(new BasicCommandBuilder("warp4").withDescription("Warps the player to another map").withParam(Parameter.BYTE, "Bank # to warp to").withParam(Parameter.BYTE, "Map # to warp to").withParam(Parameter.BYTE, "Exit # to warp to").withParam(Parameter.VARIABLE_OR_WORD, "X coordinate").withParam(Parameter.VARIABLE_OR_WORD, "Y coordinate"))
				.withCommand(new BasicCommandBuilder("warp5").withDescription("Warps the player to another map").withParam(Parameter.BYTE, "Bank # to warp to").withParam(Parameter.BYTE, "Map # to warp to").withParam(Parameter.BYTE, "Exit # to warp to").withParam(Parameter.VARIABLE_OR_WORD, "X coordinate").withParam(Parameter.VARIABLE_OR_WORD, "Y coordinate"))
				.withCommand(new BasicCommandBuilder("getplayerpos").withDescription("Gets the current position of the player on the map, and stores it in the specified variables").withParam(Parameter.VARIABLE, "Variable to store the X coordinate").withParam(Parameter.VARIABLE, "Variable to store the Y coordinate"))
				.withCommand(new BasicCommandBuilder("countpokemon").withDescription("Counts the number of Pokémon in your party, and stores the result in LASTRESULT"))
				.withCommand(new BasicCommandBuilder("additem").withDescription("Adds the quantity of the specified item").withParam(Parameter.ITEM_ID, "Item # to add").withParam(Parameter.WORD, "Quantity"))
				.withCommand(new BasicCommandBuilder("removeitem").withDescription("Removes the quantity of the specified item").withParam(Parameter.ITEM_ID, "Item # to remove").withParam(Parameter.WORD, "Quantity"))
				.withCommand(new BasicCommandBuilder("checkitemroom").withDescription("Checks if the player has enough room in the bag for the specified items").withParam(Parameter.ITEM_ID, "Item # to check for").withParam(Parameter.WORD, "Quantity"))
				.withCommand(new BasicCommandBuilder("checkitem").withDescription("Checks if the player is carrying the specified item").withParam(Parameter.ITEM_ID, "Item # to check for").withParam(Parameter.WORD, "Quantity"))
				.withCommand(new BasicCommandBuilder("checkitemtype").withDescription("Checks the item type for the specified item, and stores the result in LASTRESULT").withParam(Parameter.ITEM_ID, "Item # to check for"))
				.withCommand(new BasicCommandBuilder("addpcitem").withDescription("Adds the quantity of the specified item to the player's PC").withParam(Parameter.ITEM_ID, "Item # to add").withParam(Parameter.WORD, "Quantity"))
				.withCommand(new BasicCommandBuilder("checkpcitem").withDescription("Checks if the player has the specified item on his/her PC").withParam(Parameter.ITEM_ID, "Item # to check").withParam(Parameter.WORD, "Quantity"))
				.withCommand(new BasicCommandBuilder("adddecoration").withDescription("Adds a decoration to the player's PC").withParam(Parameter.DECORATION_ID, "Decoration #"))
				.withCommand(new BasicCommandBuilder("removedecoration").withDescription("Removes a decoration from the player's PC").withParam(Parameter.DECORATION_ID, "Decoration #"))
				.withCommand(new BasicCommandBuilder("testdecoration").withDescription("Tests a specific decoration to see if there's enough room to store it").withParam(Parameter.DECORATION_ID, "Decoration #"))
				.withCommand(new BasicCommandBuilder("checkdecoration").withDescription("Checks if a specific decoration is present in the player's PC").withParam(Parameter.DECORATION_ID, "Decoration #"))
				.withCommand(new BasicCommandBuilder("applymovement").withDescription("Applies the movement data found at the specified pointer to a sprite").withParam(Parameter.WORD, "People # to use").withParam(Parameter.POINTER, "Pointer to movement data"))
				.withCommand(new BasicCommandBuilder("applymovementpos").withDescription("Applies the movement data found at the specified pointer to a sprite. Then set the specified X/Y coordinates").withParam(Parameter.WORD, "People # to use").withParam(Parameter.POINTER, "Pointer to the movement data").withParam(Parameter.BYTE, "X coordinate").withParam(Parameter.BYTE, "Y coordinate"))
				.withCommand(new BasicCommandBuilder("waitmovement").withDescription("Waits for applymovement to finish").withParam(Parameter.WORD, "People # to wait for"))
				.withCommand(new BasicCommandBuilder("waitmovementpos").withDescription("Waits for applymovement to finish. Then set the specified X/Y coordinates").withParam(Parameter.WORD, "People # to wait for").withParam(Parameter.BYTE, "X coordinate").withParam(Parameter.BYTE, "Y coordinate"))
				.withCommand(new BasicCommandBuilder("hidesprite").withDescription("Hides a sprite").withParam(Parameter.WORD, "People # to hide"))
				.withCommand(new BasicCommandBuilder("hidespritepos").withDescription("Hides a sprite, then set the specified X/Y coordinates").withParam(Parameter.WORD, "People # to hide").withParam(Parameter.BYTE, "X coordinate").withParam(Parameter.BYTE, "Y coordinate"))
				.withCommand(new BasicCommandBuilder("showsprite").withDescription("Shows a previously vanished sprite").withParam(Parameter.WORD, "People # to show"))
				.withCommand(new BasicCommandBuilder("showspritepos").withDescription("Shows a previously vanished sprite. Then set the specified X/Y coordinates").withParam(Parameter.WORD, "People # to show").withParam(Parameter.BYTE, "X Coordinate").withParam(Parameter.BYTE, "Y Coordinate"))
				.withCommand(new BasicCommandBuilder("movesprite").withDescription("Moves a sprite to the specified location").withParam(Parameter.WORD, "People # to move").withParam(Parameter.WORD, "X coordinate to move to").withParam(Parameter.WORD, "Y coordinate to move to"))
				.withCommand(new BasicCommandBuilder("spritevisible").withDescription("Makes the sprite visible at the selected bank and map").withParam(Parameter.WORD, "People #").withParam(Parameter.BYTE, "Bank #").withParam(Parameter.BYTE, "Map #"))
				.withCommand(new BasicCommandBuilder("spriteinvisible").withDescription("Makes the sprite invisible at the selected bank and map").withParam(Parameter.WORD, "People #").withParam(Parameter.BYTE, "Bank #").withParam(Parameter.BYTE, "Map #"))
				.withCommand(new BasicCommandBuilder("faceplayer").withDescription("Turns the caller towards the player"))
				.withCommand(new BasicCommandBuilder("spriteface").withDescription("Changes a facing of a sprite").withParam(Parameter.WORD, "People #").withParam(Parameter.BYTE, "Facing"))
				//TODO: Add more variants when I rediscover them
				.withVariantCommand(new VariantCommandBuilder("trainerbattle").withParam(Parameter.BYTE, "Kind of battle")
					.withVariant(new VariantBuilder(0x0).withDescription("Starts a normal trainer battle").withParam(Parameter.WORD, "Battle # to start").withParam(Parameter.WORD, UNKNOWN_PARAMETER).withParam(Parameter.POINTER, "Pointer to challenge text").withParam(Parameter.POINTER, "Pointer to defeat text"))
					.withVariant(new VariantBuilder(0x1).withDescription("Starts a special trainer battle").withParam(Parameter.WORD, "Battle # to start").withParam(Parameter.WORD, UNKNOWN_PARAMETER).withParam(Parameter.POINTER, "Pointer to challenge text").withParam(Parameter.POINTER, "Pointer to defeat text").withParam(Parameter.POINTER, "Pointer to after-defeat script"))
					.withVariant(new VariantBuilder(0x4).withDescription("Starts a double trainer battle").withParam(Parameter.WORD, "Battle # to start").withParam(Parameter.WORD, UNKNOWN_PARAMETER).withParam(Parameter.POINTER, "Pointer to challenge text").withParam(Parameter.POINTER, "Pointer to defeat text").withParam(Parameter.POINTER, "Pointer to text to display if the player has one Pokémon"))
				)
				.withCommand(new BasicCommandBuilder("repeattrainerbattle").withDescription("Repeats the last trainer battle started"))
				.withCommand(new BasicCommandBuilder("endtrainerbattle").withDescription("Returns from the trainer battle screen without starting message"))
				.withCommand(new BasicCommandBuilder("endtrainerbattle2").withDescription("Returns from the trainer battle screen without ending message"))
				.withCommand(new BasicCommandBuilder("checktrainerflag").withDescription("Checks if the specified trainer flag is already activated and store the result in LASTRESULT").withParam(Parameter.WORD, "Trainer # to check"))
				.withCommand(new BasicCommandBuilder("cleartrainerflag").withDescription("Deactivates the specified trainer flag").withParam(Parameter.WORD, "Trainer # to disable"))
				.withCommand(new BasicCommandBuilder("settrainerflag").withDescription("Activates the specified trainer flag").withParam(Parameter.WORD, "Trainer # to enable"))
				.withCommand(new BasicCommandBuilder("movesprite2").withDescription("Moves a sprite to the specified location. Permanent change").withParam(Parameter.WORD, "People # to move").withParam(Parameter.WORD, "X coordinate to move to").withParam(Parameter.WORD, "Y coordinate to move to"))
				.withCommand(new BasicCommandBuilder("moveoffscreen").withDescription("Changes the location of the specified sprite to a value which is exactly one tile above the top-left corner of the screen").withParam(Parameter.WORD, "People # to move"))
				.withCommand(new BasicCommandBuilder("spritebehave").withDescription("Changes the behavior of a sprite").withParam(Parameter.WORD, "People #").withParam(Parameter.BYTE, "Behavior #"))
				.withCommand(new BasicCommandBuilder("waitmsg").withDescription("Waits for preparemsg to finish"))
				.withCommand(new BasicCommandBuilder("preparemsg").withDescription("Prepares a pointer to dialogue text for being displayed").withParam(Parameter.POINTER, "Pointer to text"))
				.withCommand(new BasicCommandBuilder("closeonkeypress").withDescription("Holds a msgbox open, and closes it on a key press"))
				.withCommand(new BasicCommandBuilder("lockall").withDescription("Locks down movement for all the people on the screen"))
				.withCommand(new BasicCommandBuilder("lock").withDescription("Locks down movement for the caller"))
				.withCommand(new BasicCommandBuilder("releaseall").withDescription("Resumes normal movement for all people on the screen. Closes any previously opened msgboxes as well"))
				.withCommand(new BasicCommandBuilder("release").withDescription("Resumes normal movement for the caller. Closes any previously opened msgboxes as well"))
				.withCommand(new BasicCommandBuilder("waitkeypress").withDescription("Waits until a key is pressed"))
				.withCommand(new BasicCommandBuilder("yesnobox").withDescription("Displays a yes/no box at specified coordinates").withParam(Parameter.BYTE, "X coordinate").withParam(Parameter.BYTE, "Y coordinate"))
				.withCommand(new BasicCommandBuilder("multichoice").withDescription("Puts up a list of choices for the player to make").withParam(Parameter.BYTE, "X coordinate").withParam(Parameter.BYTE, "Y coordinate").withParam(Parameter.BYTE, "Choice list ID # to use").withParam(Parameter.BYTE, "Determines if the B button can be used to cancel"))
				.withCommand(new BasicCommandBuilder("multichoice2").withDescription("Puts up a list of choices for the player to make. A default choice can be set").withParam(Parameter.BYTE, "X coordinate").withParam(Parameter.BYTE, "Y coordinate").withParam(Parameter.BYTE, "Choice list ID # to use").withParam(Parameter.BYTE, "Default selected choice").withParam(Parameter.BYTE, "Determines if the B button can be used to cancel"))
				.withCommand(new BasicCommandBuilder("multichoice3").withDescription("Puts up a list of choices for the player to make. The number of choices per row can be set").withParam(Parameter.BYTE, "X coordinate").withParam(Parameter.BYTE, "Y coordinate").withParam(Parameter.BYTE, "Choice list ID # to use").withParam(Parameter.BYTE, "Number of choices per row").withParam(Parameter.BYTE, "Determines if the B button can be used to cancel"))
				.withCommand(new BasicCommandBuilder("showbox").withDescription("Displays a box with the given dimensions").withParam(Parameter.BYTE, "X coordinate").withParam(Parameter.BYTE, "Y coordinate").withParam(Parameter.BYTE, "Width").withParam(Parameter.BYTE, "Height"))
				.withCommand(new BasicCommandBuilder("hidebox").withDescription("Hides a displayed box. Ruby/Sapphire only").withParam(Parameter.BYTE, "X coordinate").withParam(Parameter.BYTE, "Y coordinate").withParam(Parameter.BYTE, "Width").withParam(Parameter.BYTE, "Height"))
				.withCommand(new BasicCommandBuilder("clearbox").withDescription("Clears a part of a custom box").withParam(Parameter.BYTE, "X coordinate").withParam(Parameter.BYTE, "Y coordinate").withParam(Parameter.BYTE, "Width").withParam(Parameter.BYTE, "Height"))
				.withCommand(new BasicCommandBuilder("showpokepic").withDescription("Displays a Pokémon in a picture box").withParam(Parameter.POKEMON_ID, "Pokémon species to display").withParam(Parameter.BYTE, "X coordinate").withParam(Parameter.BYTE, "Y coordinate"))
				.withCommand(new BasicCommandBuilder("hidepokepic").withDescription("Hides a Pokémon picture box previously shown"))
				.withCommand(new BasicCommandBuilder("showcontestwinner").withDescription("Shows the picture of the winner of set contest").withParam(Parameter.BYTE, "Contest #"))
				.withCommand(new BasicCommandBuilder("braille").withDescription("Displays a braille box").withParam(Parameter.POINTER, "Pointer to braille data"))
				.withCommand(new BasicCommandBuilder("givepokemon").withDescription("Gives the player a Pokémon").withParam(Parameter.POKEMON_ID, "Pokémon species to give").withParam(Parameter.BYTE, "Level of the Pokémon").withParam(Parameter.ITEM_ID, "Item # to be held").withParam(Parameter.DOUBLE, "Filler").withParam(Parameter.DOUBLE, "Filler").withParam(Parameter.BYTE, "Filler"))
				.withCommand(new BasicCommandBuilder("giveegg").withDescription("Gives the player an egg of the specified Pokémon").withParam(Parameter.POKEMON_ID, "Pokémon species to give"))
				.withCommand(new BasicCommandBuilder("setpkmnpp").withDescription("Sets a new amount of PP for the specified Pokémon in the player's party").withParam(Parameter.BYTE, "Pokémon slot").withParam(Parameter.BYTE, "Attack slot").withParam(Parameter.WORD, "PP amount"))
				.withCommand(new BasicCommandBuilder("checkattack").withDescription("Check if at least one Pokémon in the party has a particular attack").withParam(Parameter.MOVE_ID, "Attack # to check"))
				.withCommand(new BasicCommandBuilder("bufferpokemon").withDescription("Stores a Pokémon name within a specified buffer").withParam(Parameter.BYTE, "Buffer #").withParam(Parameter.POKEMON_ID, "Pokémon species to store"))
				.withCommand(new BasicCommandBuilder("bufferfirstpokemon").withDescription("Stores the first Pokémon name in the player's party within a specified buffer").withParam(Parameter.BYTE, "Buffer #"))
				.withCommand(new BasicCommandBuilder("bufferpartypokemon").withDescription("Stores the selected Pokémon's name in the player's party within a specified buffer").withParam(Parameter.BYTE, "Buffer #").withParam(Parameter.VARIABLE_OR_WORD, "Pokemon slot"))
				.withCommand(new BasicCommandBuilder("bufferitem").withDescription("Stores an item name within a specified buffer").withParam(Parameter.BYTE, "Buffer #").withParam(Parameter.ITEM_ID, "Item # to store"))
				.withCommand(new BasicCommandBuilder("bufferdecoration").withDescription("Stores a decoration name within a specified buffer").withParam(Parameter.BYTE, "Buffer #").withParam(Parameter.DECORATION_ID, "Decoration # to store"))
				.withCommand(new BasicCommandBuilder("bufferattack").withDescription("Stores an attack name within a specified buffer").withParam(Parameter.BYTE, "Buffer #").withParam(Parameter.MOVE_ID, "Attack # to store"))
				.withCommand(new BasicCommandBuilder("buffernumber").withDescription("Stores a variable value within a specified buffer").withParam(Parameter.BYTE, "Buffer #").withParam(Parameter.VARIABLE, "Variable to store"))
				.withCommand(new BasicCommandBuilder("bufferstd").withDescription("Stores a standard string within a specified buffer").withParam(Parameter.BYTE, "Buffer #").withParam(Parameter.WORD, "Standard string #"))
				.withCommand(new BasicCommandBuilder("bufferstring").withDescription("Stores a string within a specified buffer").withParam(Parameter.BYTE, "Buffer #").withParam(Parameter.POINTER, "Pointer to the string to store"))
				.withCommand(new BasicCommandBuilder("pokemart").withDescription("Opens the Pokémart shop system with the item list found at the selected pointer").withParam(Parameter.POINTER, "Pointer to the item list"))
				.withCommand(new BasicCommandBuilder("pokemart2").withDescription("Opens the Pokémart shop system with the item list found at the selected pointer").withParam(Parameter.POINTER, "Pointer to the item list"))
				.withCommand(new BasicCommandBuilder("pokemart3").withDescription("Opens the Pokémart shop system with the item list found at the selected pointer").withParam(Parameter.POINTER, "Pointer to the item list"))
				.withCommand(new BasicCommandBuilder("pokecasino").withDescription("Opens the casino system").withParam(Parameter.VARIABLE, "Variable #"))
				.withCommand(new BasicCommandBuilder("cmd8a").withDescription(UNKNOWN_COMMAND).withParam(Parameter.BYTE, UNKNOWN_PARAMETER).withParam(Parameter.BYTE, UNKNOWN_PARAMETER).withParam(Parameter.BYTE, UNKNOWN_PARAMETER))
				.withCommand(new BasicCommandBuilder("choosecontestpkmn").withDescription("Opens up a menu for choosing a contest Pokémon"))
				.withCommand(new BasicCommandBuilder("startcontest").withDescription("Start a Pokémon contest"))
				.withCommand(new BasicCommandBuilder("showcontestresults").withDescription("Shows Pokémon contest results"))
				.withCommand(new BasicCommandBuilder("contestlinktransfer").withDescription("Establishes a connection using the wireless adapter. Emerald only"))
				.withCommand(new BasicCommandBuilder("random").withDescription("Generates a random number, storing it in LASTRESULT").withParam(Parameter.WORD, "Total possibilities"))
				.withCommand(new BasicCommandBuilder("givemoney").withDescription("Gives the player some money").withParam(Parameter.DOUBLE, "Money quantity to give").withParam(Parameter.BYTE, "Command execution check"))
				.withCommand(new BasicCommandBuilder("paymoney").withDescription("Takes some money from the player").withParam(Parameter.DOUBLE, "Money quantity to pay").withParam(Parameter.BYTE, "Command execution check"))
				.withCommand(new BasicCommandBuilder("checkmoney").withDescription("Checks if the player has a specified amount of money").withParam(Parameter.DOUBLE, "Money quantity to check").withParam(Parameter.BYTE, "Command execution check"))
				.withCommand(new BasicCommandBuilder("showmoney").withDescription("Shows the money counter on set coordinates").withParam(Parameter.BYTE, "X coordinate").withParam(Parameter.BYTE, "Y coordinate").withParam(Parameter.BYTE, "Command execution check"))
				.withCommand(new BasicCommandBuilder("hidemoney").withDescription("Hides the money counter").withParam(Parameter.BYTE, "X coordinate").withParam(Parameter.BYTE, "Y coordinate"))
				.withCommand(new BasicCommandBuilder("updatemoney").withDescription("Updates the amount of money displayed in the money counter").withParam(Parameter.BYTE, "X coordinate").withParam(Parameter.BYTE, "Y coordinate").withParam(Parameter.BYTE, "Command execution check"))
				.withCommand(new BasicCommandBuilder("cmd96").withDescription(UNKNOWN_COMMAND).withParam(Parameter.WORD, UNKNOWN_PARAMETER))
				.withCommand(new BasicCommandBuilder("fadescreen").withDescription("Fades the screen in or out").withParam(Parameter.BYTE, "Fade effect"))
				.withCommand(new BasicCommandBuilder("fadescreendelay").withDescription("Fades the screen in or out, after some delay").withParam(Parameter.BYTE, "Fade effect").withParam(Parameter.BYTE, "Delay"))
				.withCommand(new BasicCommandBuilder("darken").withDescription("Calls flash animation that darkens the area. Must be called from a level script").withParam(Parameter.WORD, "Flash size"))
				.withCommand(new BasicCommandBuilder("lighten").withDescription("Calls flash animation that lightens the area").withParam(Parameter.WORD, "Flash size"))
				.withCommand(new BasicCommandBuilder("preparemsg2").withDescription(UNKNOWN_COMMAND).withParam(Parameter.POINTER, UNKNOWN_PARAMETER))
				.withCommand(new BasicCommandBuilder("doanimation").withDescription("Executes the specified move animation").withParam(Parameter.WORD, "Animation #"))
				.withCommand(new BasicCommandBuilder("setanimation").withDescription("Sets the move animation").withParam(Parameter.BYTE, "Animation #").withParam(Parameter.VARIABLE, "Variable to use"))
				.withCommand(new BasicCommandBuilder("checkanimation").withDescription("Checks whether an animation is currently being played or not. If so, it'll pause until the animation is done").withParam(Parameter.WORD, "Animation #"))
				.withCommand(new BasicCommandBuilder("sethealingplace").withDescription("Sets the place where the player goes once they are out of usable Pokémon").withParam(Parameter.WORD, "Flightspot #"))
				.build();

    public static void main(String[] args) {
        System.out.println("H!");
    }
}
